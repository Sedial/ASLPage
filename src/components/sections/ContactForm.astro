---
import Button from '../ui/Button.astro';

interface Props {
  title?: string;
  subtitle?: string;
}

const {
  title = 'Get in touch',
  subtitle = 'Fill out the form below and we\'ll get back to you as soon as possible.',
} = Astro.props;
---

<div class="bg-white rounded-lg shadow-md p-6 md:p-8">
  {title && <h3 class="text-2xl font-bold mb-2">{title}</h3>}
  {subtitle && <p class="text-gray-600 mb-6">{subtitle}</p>}
  
  <form id="contactForm" class="space-y-4">
    <!-- Form status messages -->
    <div id="formStatus" class="hidden rounded-md p-4 mb-4"></div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <!-- Name -->
      <div class="w-full">
        <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Your Name <span class="text-red-500">*</span></label>
        <input 
          type="text" 
          id="name" 
          name="name" 
          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          required
        />
      </div>
      
      <!-- Email -->
      <div class="w-full">
        <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Your Email <span class="text-red-500">*</span></label>
        <input 
          type="email" 
          id="email" 
          name="email" 
          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
          required
        />
      </div>
    </div>
    
    <!-- Subject -->
    <div>
      <label for="subject" class="block text-sm font-medium text-gray-700 mb-1">Subject</label>
      <input 
        type="text" 
        id="subject" 
        name="subject" 
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
      />
    </div>
    
    <!-- Message -->
    <div>
      <label for="message" class="block text-sm font-medium text-gray-700 mb-1">Message <span class="text-red-500">*</span></label>
      <textarea 
        id="message" 
        name="message" 
        rows="5" 
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
        required
      ></textarea>
    </div>
    
    <div>
      <Button type="submit" variant="primary" customClasses="w-full">
        <span id="submitText">Send Message</span>
        <span id="loadingText" class="hidden">Sending...</span>
      </Button>
    </div>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contactForm') as HTMLFormElement;
    const statusDiv = document.getElementById('formStatus') as HTMLDivElement;
    const submitText = document.getElementById('submitText') as HTMLSpanElement;
    const loadingText = document.getElementById('loadingText') as HTMLSpanElement;
    
    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Show loading state
        submitText.classList.add('hidden');
        loadingText.classList.remove('hidden');
        
        try {
          // Get form data
          const formData = new FormData(form);
          
          // Send form data to the API endpoint
          const response = await fetch('/api/contact', {
            method: 'POST',
            body: formData,
          });
          
          const result = await response.json();
          
          // Display success or error message
          statusDiv.classList.remove('hidden');
          
          if (result.success) {
            statusDiv.classList.add('bg-green-100', 'text-green-800');
            statusDiv.classList.remove('bg-red-100', 'text-red-800');
            statusDiv.textContent = result.message;
            form.reset(); // Clear the form on success
          } else {
            statusDiv.classList.add('bg-red-100', 'text-red-800');
            statusDiv.classList.remove('bg-green-100', 'text-green-800');
            statusDiv.textContent = result.message || 'An error occurred. Please try again.';
          }
        } catch (error) {
          // Handle network errors
          statusDiv.classList.remove('hidden');
          statusDiv.classList.add('bg-red-100', 'text-red-800');
          statusDiv.classList.remove('bg-green-100', 'text-green-800');
          statusDiv.textContent = 'An error occurred while submitting the form. Please try again later.';
          console.error('Form submission error:', error);
        } finally {
          // Hide loading state
          submitText.classList.remove('hidden');
          loadingText.classList.add('hidden');
        }
      });
    }
  });
</script>
