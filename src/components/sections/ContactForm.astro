---
import Button from '../ui/Button.astro';

interface Props {
  title?: string;
  subtitle?: string;
}

const {
  title = 'Solicita Información',
  subtitle = 'Completa el formulario y nos pondremos en contacto contigo lo antes posible.',
} = Astro.props;
---

<div class="space-y-6">
  <!-- Encabezado del formulario -->
  <div class="text-center lg:text-left">
    <h3 class="text-2xl font-bold text-primary-600 mb-3">{title}</h3>
    <p class="text-gray-600 text-sm leading-relaxed">{subtitle}</p>
  </div>
  
  <form id="contactForm" class="space-y-5">
    <!-- Form status messages -->
    <div id="formStatus" class="hidden rounded-lg p-4 mb-4 text-sm font-medium"></div>
    
    <!-- Nombre y Empresa -->
    <div class="grid grid-cols-1 gap-4">
      <div class="w-full">
        <label for="name" class="block text-sm font-semibold text-gray-800 mb-2">
          Nombre Completo <span class="text-primary-600">*</span>
        </label>
        <input 
          type="text" 
          id="name" 
          name="name" 
          placeholder="Ingresa tu nombre completo"
          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200 text-sm"
          required
        />
      </div>
      
      <div class="w-full">
        <label for="company" class="block text-sm font-semibold text-gray-800 mb-2">
          Empresa
        </label>
        <input 
          type="text" 
          id="company" 
          name="company" 
          placeholder="Nombre de tu empresa"
          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200 text-sm"
        />
      </div>
    </div>
    
    <!-- Email y Teléfono -->
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      <div class="w-full">
        <label for="email" class="block text-sm font-semibold text-gray-800 mb-2">
          Correo Electrónico <span class="text-primary-600">*</span>
        </label>
        <input 
          type="email" 
          id="email" 
          name="email" 
          placeholder="tu@email.com"
          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200 text-sm"
          required
        />
      </div>
      
      <div class="w-full">
        <label for="phone" class="block text-sm font-semibold text-gray-800 mb-2">
          Teléfono
        </label>
        <input 
          type="tel" 
          id="phone" 
          name="phone" 
          placeholder="+57 300 123 4567"
          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200 text-sm"
        />
      </div>
    </div>
    
    <!-- Tipo de servicio -->
    <div>
      <label for="service" class="block text-sm font-semibold text-gray-800 mb-2">
        Servicio de Interés
      </label>
      <select 
        id="service" 
        name="service" 
        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200 text-sm bg-white"
      >
        <option value="">Selecciona un servicio</option>
        <option value="transporte-terrestre">Transporte Terrestre</option>
        <option value="logistica-integral">Logística Integral</option>
        <option value="almacenamiento">Almacenamiento</option>
        <option value="distribucion">Distribución</option>
        <option value="consultoria">Consultoría Logística</option>
        <option value="otro">Otro</option>
      </select>
    </div>
    
    <!-- Mensaje -->
    <div>
      <label for="message" class="block text-sm font-semibold text-gray-800 mb-2">
        Mensaje <span class="text-primary-600">*</span>
      </label>
      <textarea 
        id="message" 
        name="message" 
        rows="4" 
        placeholder="Cuéntanos sobre tus necesidades logísticas..."
        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors duration-200 text-sm resize-none"
        required
      ></textarea>
    </div>
    
    <!-- Botón de envío -->
    <div class="pt-2">
      <Button type="submit" variant="primary" customClasses="w-full py-3 text-base font-semibold">
        <span id="submitText">Enviar Solicitud</span>
        <span id="loadingText" class="hidden">Enviando...</span>
      </Button>
    </div>
    
    <!-- Nota de privacidad -->
    <p class="text-xs text-gray-500 text-center">
      Al enviar este formulario, aceptas que ASL Logística se ponga en contacto contigo para brindarte información sobre nuestros servicios.
    </p>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contactForm') as HTMLFormElement;
    const statusDiv = document.getElementById('formStatus') as HTMLDivElement;
    const submitText = document.getElementById('submitText') as HTMLSpanElement;
    const loadingText = document.getElementById('loadingText') as HTMLSpanElement;
    
    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Mostrar estado de carga
        submitText.classList.add('hidden');
        loadingText.classList.remove('hidden');
        
        try {
          // Obtener datos del formulario
          const formData = new FormData(form);
          
          // Enviar datos al endpoint de la API
          const response = await fetch('/api/contact', {
            method: 'POST',
            body: formData,
          });
          
          const result = await response.json();
          
          // Mostrar mensaje de éxito o error
          statusDiv.classList.remove('hidden');
          
          if (result.success) {
            statusDiv.classList.add('bg-green-100', 'text-green-800', 'border', 'border-green-200');
            statusDiv.classList.remove('bg-red-100', 'text-red-800', 'border-red-200');
            statusDiv.textContent = result.message || '¡Gracias! Tu mensaje ha sido enviado correctamente. Nos pondremos en contacto contigo pronto.';
            form.reset(); // Limpiar el formulario en caso de éxito
          } else {
            statusDiv.classList.add('bg-red-100', 'text-red-800', 'border', 'border-red-200');
            statusDiv.classList.remove('bg-green-100', 'text-green-800', 'border-green-200');
            statusDiv.textContent = result.message || 'Ocurrió un error al enviar el mensaje. Por favor, inténtalo de nuevo.';
          }
        } catch (error) {
          // Manejar errores de red
          statusDiv.classList.remove('hidden');
          statusDiv.classList.add('bg-red-100', 'text-red-800', 'border', 'border-red-200');
          statusDiv.classList.remove('bg-green-100', 'text-green-800', 'border-green-200');
          statusDiv.textContent = 'Error de conexión. Por favor, verifica tu conexión a internet e inténtalo de nuevo.';
          console.error('Error al enviar formulario:', error);
        } finally {
          // Ocultar estado de carga
          submitText.classList.remove('hidden');
          loadingText.classList.add('hidden');
        }
      });
    }
  });
</script>
