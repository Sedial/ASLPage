---
// Datos de servicios dinámicos para ASL
const services = [
  {
    id: 'logistica',
    title: 'Logística Integral',
    description: 'Soluciones completas de transporte y distribución para optimizar tu cadena de suministro',
    features: [
      'Transporte terrestre nacional',
      'Gestión de inventarios',
      'Distribución last-mile',
      'Tracking en tiempo real'
    ],
    icon: 'truck',
    color: 'primary',
    image: '/images/services/logistica.webp'
  },
  {
    id: 'almacenamiento',
    title: 'Almacenamiento',
    description: 'Espacios seguros y tecnológicamente avanzados para el resguardo de tu mercancía',
    features: [
      'Bodegas climatizadas',
      'Sistema WMS avanzado',
      'Seguridad 24/7',
      'Manejo especializado'
    ],
    icon: 'warehouse',
    color: 'secondary',
    image: '/images/services/almacenamiento.webp'
  },
  {
    id: 'distribucion',
    title: 'Distribución',
    description: 'Red de distribución eficiente que conecta tu producto con el cliente final',
    features: [
      'Cobertura nacional',
      'Entregas programadas',
      'Gestión de devoluciones',
      'Reportes detallados'
    ],
    icon: 'delivery',
    color: 'accent',
    image: '/images/services/distribucion.webp'
  },
  {
    id: 'tecnologia',
    title: 'Tecnología',
    description: 'Plataformas digitales que transforman y optimizan tus operaciones logísticas',
    features: [
      'Software TMS/WMS',
      'APIs de integración',
      'Dashboard analytics',
      'Automatización de procesos'
    ],
    icon: 'tech',
    color: 'primary',
    image: '/images/services/tecnologia.webp'
  },
  {
    id: 'consultoria',
    title: 'Consultoría',
    description: 'Asesoría especializada para optimizar y transformar tus procesos logísticos',
    features: [
      'Análisis de procesos',
      'Optimización de rutas',
      'Reducción de costos',
      'Implementación de mejores prácticas'
    ],
    icon: 'consulting',
    color: 'secondary',
    image: '/images/services/consultoria.webp'
  }
];

// Script para funcionalidad interactiva
const interactiveScript = `
  document.addEventListener('DOMContentLoaded', () => {
    const serviceTags = document.querySelectorAll('.service-tag');
    const serviceContent = document.querySelector('.service-content');
    const serviceImage = document.querySelector('.service-image');
    const serviceTitle = document.querySelector('.service-title');
    const serviceDescription = document.querySelector('.service-description');
    const serviceFeatures = document.querySelector('.service-features');
    
    let currentIndex = 0;
    const services = ${JSON.stringify(services)};
    
    // Función para actualizar el contenido del servicio
    function updateServiceContent(index) {
      const service = services[index];
      
      // Animación de salida
      serviceContent.style.opacity = '0';
      serviceContent.style.transform = 'translateY(20px)';
      
      setTimeout(() => {
        // Actualizar contenido
        serviceTitle.textContent = service.title;
        serviceDescription.textContent = service.description;
        
        // Actualizar características
        serviceFeatures.innerHTML = service.features.map(feature => 
          \`<div class="flex items-center space-x-3 mb-3">
            <div class="w-2 h-2 bg-primary-500 rounded-full flex-shrink-0"></div>
            <span class="text-gray-700">\${feature}</span>
          </div>\`
        ).join('');
        
        // Actualizar imagen real
         serviceImage.src = service.image;
         serviceImage.alt = service.title;
        
        // Animación de entrada
        serviceContent.style.opacity = '1';
        serviceContent.style.transform = 'translateY(0)';
      }, 200);
    }
    
    // Función para activar tag
    function activateTag(index) {
      // Remover clase activa de todos los tags
      serviceTags.forEach(tag => {
        tag.classList.remove('active');
        tag.classList.add('inactive');
      });
      
      // Activar tag seleccionado
      serviceTags[index].classList.add('active');
      serviceTags[index].classList.remove('inactive');
      
      currentIndex = index;
      updateServiceContent(index);
    }
    
    // Event listeners para tags
    serviceTags.forEach((tag, index) => {
      tag.addEventListener('click', () => {
        activateTag(index);
      });
    });
    
    // Auto-carrusel cada 5 segundos
    setInterval(() => {
      currentIndex = (currentIndex + 1) % services.length;
      activateTag(currentIndex);
    }, 5000);
    
    // Inicializar con el primer servicio
    activateTag(0);
    
    // Navegación con teclado
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') {
        currentIndex = currentIndex > 0 ? currentIndex - 1 : services.length - 1;
        activateTag(currentIndex);
      } else if (e.key === 'ArrowRight') {
        currentIndex = (currentIndex + 1) % services.length;
        activateTag(currentIndex);
      }
    });
  });
`;
---

<section class="section relative py-20 bg-gradient-to-br from-gray-50 via-white to-gray-50 overflow-hidden" id="services">
  <!-- Elementos decorativos de fondo -->
  <div class="absolute inset-0 pointer-events-none">
    <!-- Gradiente principal -->
    <div class="absolute top-0 left-0 w-full h-full bg-gradient-to-br from-primary-50/30 via-transparent to-secondary-50/30"></div>
    
    <!-- Formas geométricas -->
    <div class="absolute top-20 right-10 w-32 h-32 bg-gradient-to-br from-primary-200/20 to-primary-300/20 rounded-full blur-xl"></div>
    <div class="absolute bottom-20 left-10 w-24 h-24 bg-gradient-to-br from-secondary-200/20 to-secondary-300/20 rounded-full blur-lg"></div>
    
    <!-- Líneas decorativas -->
    <div class="absolute top-1/3 left-0 w-full h-px bg-gradient-to-r from-transparent via-primary-200/30 to-transparent"></div>
    <div class="absolute bottom-1/3 left-0 w-full h-px bg-gradient-to-r from-transparent via-secondary-200/30 to-transparent"></div>
  </div>

  <div class="container mx-auto px-4 max-w-7xl relative z-10">
    <!-- Header Section -->
    <div class="text-center mb-16">
      <div class="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-primary-500 to-primary-600 rounded-2xl mb-8 shadow-lg">
        <svg class="w-10 h-10 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
        </svg>
      </div>
      <h2 class="text-5xl lg:text-6xl font-bold text-primary-600 mb-6 leading-tight">
        Nuestros <span class="text-primary-500">Servicios</span>
      </h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
        Soluciones logísticas integrales diseñadas para impulsar el crecimiento de tu negocio
      </p>
    </div>

    <!-- Tags Dinámicos (Carrusel) -->
    <div class="mb-12">
      <div class="flex flex-wrap justify-center gap-4 mb-8">
        {services.map((service, index) => (
          <button 
            class={`service-tag px-6 py-3 rounded-full font-semibold transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-primary-200 ${index === 0 ? 'active' : 'inactive'}`}
            data-service={service.id}
          >
            <span class="flex items-center space-x-2">
              <div class="w-2 h-2 rounded-full bg-current"></div>
              <span>{service.title}</span>
            </span>
          </button>
        ))}
      </div>
      
      <!-- Indicador de progreso -->
      <div class="flex justify-center">
        <div class="flex space-x-2">
          {services.map((_, index) => (
            <div class={`w-2 h-2 rounded-full transition-all duration-300 ${index === 0 ? 'bg-primary-500 w-8' : 'bg-gray-300'}`}></div>
          ))}
        </div>
      </div>
    </div>

    <!-- Contenido Principal del Servicio -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
      <!-- Imagen del Servicio -->
       <div class="relative">
         <!-- Imagen del servicio -->
         <img class="service-image w-full rounded-3xl shadow-2xl object-contain" 
              src="/images/services/logistica.webp" 
              alt="Logística Integral"
              loading="lazy">
         
         <!-- Overlay con efecto -->
         <div class="absolute inset-0 bg-gradient-to-t from-black/10 via-transparent to-transparent rounded-3xl"></div>
         
         <!-- Badge flotante -->
         <div class="absolute top-6 right-6 bg-white/90 backdrop-blur-sm px-4 py-2 rounded-full shadow-lg">
           <span class="text-sm font-semibold text-gray-800">Servicio Premium</span>
         </div>
         
         <!-- Elementos decorativos -->
         <div class="absolute -top-4 -left-4 w-8 h-8 bg-accent-yellow rounded-full opacity-80"></div>
         <div class="absolute -bottom-4 -right-4 w-6 h-6 bg-accent-green rounded-full opacity-80"></div>
       </div>

      <!-- Contenido del Servicio -->
      <div class="service-content transition-all duration-300">
        <h3 class="service-title text-4xl lg:text-5xl font-bold text-primary-600 mb-6 leading-tight">
          {services[0].title}
        </h3>
        
        <p class="service-description text-xl text-gray-600 mb-8 leading-relaxed">
          {services[0].description}
        </p>
        
        <!-- Características del Servicio -->
        <div class="service-features space-y-3 mb-8">
          {services[0].features.map((feature) => (
            <div class="flex items-center space-x-3">
              <div class="w-2 h-2 bg-primary-500 rounded-full flex-shrink-0"></div>
              <span class="text-gray-700">{feature}</span>
            </div>
          ))}
        </div>
        
        <!-- CTA Buttons -->
        <div class="flex flex-col sm:flex-row gap-4">
          <a href="/contact" class="inline-flex items-center justify-center px-8 py-4 bg-primary-500 hover:bg-primary-600 text-white font-semibold rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1">
            <span>Solicitar Cotización</span>
            <svg class="w-5 h-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
            </svg>
          </a>
          
          <button onclick="scrollToContact()" class="inline-flex items-center justify-center px-8 py-4 border-2 border-primary-500 text-primary-500 hover:bg-primary-500 hover:text-white font-semibold rounded-xl transition-all duration-300">
            <span>Más Información</span>
          </button>
        </div>
      </div>
    </div>


  </div>

  <!-- Script Interactivo -->
  <script set:html={interactiveScript} />
  
  <!-- Función para scroll suave a la sección de contacto -->
  <script>
    // Hacer la función global
    window.scrollToContact = function() {
      console.log('Función scrollToContact ejecutada');
      const contactSection = document.getElementById('contacto');
      console.log('Sección encontrada:', contactSection);
      if (contactSection) {
        contactSection.scrollIntoView({ 
          behavior: 'smooth',
          block: 'start'
        });
        console.log('Scroll ejecutado');
      } else {
        console.log('No se encontró la sección con ID "contacto"');
      }
    };
    
    // También definirla localmente para compatibilidad
    function scrollToContact() {
      window.scrollToContact();
    }
  </script>

  <style>
    :root {
      --color-primary-500: #CA241C;
      --color-primary-600: #9E2420;
      --color-secondary-500: #3D5A80;
      --color-secondary-600: #2d4a6b;
      --color-accent-yellow: #F5C06B;
      --color-accent-green: #A2C8A2;
    }

    /* Estilos para tags de servicios */
    .service-tag.active {
      background: linear-gradient(135deg, var(--color-primary-500), var(--color-primary-600));
      color: white;
      box-shadow: 0 10px 25px rgba(202, 36, 28, 0.3);
      transform: scale(1.05);
    }
    
    .service-tag.inactive {
      background: white;
      color: #4B4B4B;
      border: 2px solid #e5e5e7;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }
    
    .service-tag.inactive:hover {
      background: #f8fafc;
      border-color: var(--color-primary-500);
      color: var(--color-primary-500);
      transform: scale(1.02);
    }

    /* Animaciones para el contenido */
    .service-content {
      transition: opacity 0.3s ease, transform 0.3s ease;
    }
    
    .service-image {
       transition: all 0.5s ease;
     }
     
     .service-image:hover {
       transform: scale(1.05);
     }

    /* Efectos de hover para botones */
    .service-tag:focus {
      outline: none;
      ring: 4px;
      ring-color: rgba(202, 36, 28, 0.2);
    }

    /* Responsive adjustments */
     @media (max-width: 768px) {
       .service-tag {
         font-size: 0.875rem;
         padding: 0.5rem 1rem;
       }
       
       .service-image {
         max-height: 300px;
         object-fit: contain;
       }
     }

    /* Animación de entrada */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .service-content > * {
      animation: fadeInUp 0.6s ease forwards;
    }
    
    .service-content > *:nth-child(1) { animation-delay: 0.1s; }
    .service-content > *:nth-child(2) { animation-delay: 0.2s; }
    .service-content > *:nth-child(3) { animation-delay: 0.3s; }
    .service-content > *:nth-child(4) { animation-delay: 0.4s; }
  </style>
</section>