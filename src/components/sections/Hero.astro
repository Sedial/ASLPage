---
import Button from '../ui/Button.astro';
import { Image } from 'astro:assets';

interface Props {
  title?: string;
  subtitle?: string;
  primaryCTA?: {
    text: string;
    href: string;
  };
  secondaryCTA?: {
    text: string;
    href: string;
  };
}

const {
  title = 'Soluciones logísticas integrales para su negocio',
  subtitle = '16+ años de experiencia en logística 4PL. Almacenamiento, inventarios y distribución perfecta en Armenia, Cali y Pasto.',
  primaryCTA = {
    text: 'Solicitar Cotización',
    href: '/contact',
  },
  secondaryCTA = {
    text: 'Ver Servicios',
    href: '/services',
  },
} = Astro.props;
---

<section class="relative pt-28 lg:pt-32 min-h-[95vh] flex items-center bg-white overflow-hidden">
  <!-- Elementos decorativos de fondo -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="absolute top-20 right-10 w-32 h-32 bg-primary-50 rounded-full opacity-60 bg-decoration"></div>
    <div class="absolute bottom-20 left-10 w-24 h-24 bg-secondary-50 rounded-full opacity-40 bg-decoration"></div>
    <div class="absolute top-1/2 right-1/4 w-16 h-16 bg-accent-yellow opacity-20 rounded-full bg-decoration"></div>
  </div>

  <div class="container mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-12 items-center">
      
      <!-- Columna de Contenido - 7 columnas -->
      <div class="lg:col-span-7 text-left space-y-8 lg:space-y-10">
        
        <!-- Badge y título -->
        <div class="space-y-6">
          <div class="flex items-center gap-3 hero-badge">
            <span class="inline-flex items-center px-4 py-2 rounded-full bg-primary-500 text-white text-sm font-semibold tracking-wide">
              <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              Expertos en Logística 4PL
            </span>
            <span class="text-sm text-gray-500 font-medium">Desde 2008</span>
          </div>
          
          <h1 class="text-4xl sm:text-5xl lg:text-6xl xl:text-7xl font-bold leading-tight text-gray-900 hero-title">
            <span class="text-primary-600">{title.split(' ').slice(0, 2).join(' ')}</span>
            <span class="block text-gray-900">{title.split(' ').slice(2).join(' ')}</span>
          </h1>
          
          <p class="text-xl sm:text-2xl text-gray-600 leading-relaxed max-w-2xl font-light hero-subtitle">
            {subtitle}
          </p>
        </div>
        
        <!-- Estadísticas clave -->
        <div class="hero-stats grid grid-cols-3 gap-4 py-6">
          <div class="stat-item text-center">
            <div class="stat-number text-3xl font-bold text-primary-600">16+</div>
            <div class="text-xs text-gray-500 font-medium">Años</div>
          </div>
          <div class="stat-item text-center">
            <div class="stat-number text-3xl font-bold text-primary-600">3</div>
            <div class="text-xs text-gray-500 font-medium">Ciudades</div>
          </div>
          <div class="stat-item text-center">
            <div class="stat-number text-3xl font-bold text-primary-600">24/7</div>
            <div class="text-xs text-gray-500 font-medium">Servicio</div>
          </div>
        </div>
        
        <!-- Botones CTA -->
        <div class="flex flex-col sm:flex-row gap-4 sm:gap-6 pt-4 hero-buttons">
          <Button 
            href={primaryCTA.href}
            variant="primary"
            class="text-lg px-8 py-4 bg-primary-500 hover:bg-primary-600 text-white font-semibold rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 border-0 hero-button-primary"
          >
            {primaryCTA.text}
            <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
            </svg>
          </Button>
          <Button 
            href={secondaryCTA.href}
            variant="outline"
            class="text-lg px-8 py-4 border-2 border-secondary-500 text-secondary-500 hover:bg-secondary-500 hover:text-white font-semibold rounded-xl transition-all duration-300 transform hover:-translate-y-1 hero-button-secondary"
          >
            {secondaryCTA.text}
          </Button>
        </div>


      </div>

      <!-- Columna de Imagen - 5 columnas -->
      <div class="lg:col-span-5 relative">
        <!-- Contenedor principal de imágenes -->
        <div class="hero-image relative">
          <!-- Imagen Principal Central -->
          <div class="relative bg-gradient-to-br from-gray-50 to-gray-100 rounded-3xl p-8 shadow-2xl z-10">
            <img 
              src="/images/hero/hero1.webp" 
              alt="Soluciones logísticas ASL - Almacenamiento y distribución profesional"
              class="w-full h-auto object-contain rounded-2xl"
              loading="eager"
            />
            
            <!-- Badge flotante "En línea" -->
            <div class="floating-badge absolute top-6 left-6 bg-green-500 text-white px-4 py-2 rounded-full text-sm font-medium shadow-lg z-20">
              <div class="flex items-center gap-2">
                <div class="w-2 h-2 bg-white rounded-full animate-pulse"></div>
                En línea
              </div>
            </div>
            
            <!-- Card flotante de estadística -->
            <div class="floating-stat absolute bottom-6 right-6 bg-white rounded-xl shadow-xl p-4 backdrop-blur-sm bg-white/95 z-20">
              <div class="text-2xl font-bold text-primary-600">99.8%</div>
              <div class="text-sm text-gray-600">Entregas perfectas</div>
            </div>
          </div>

          <!-- Imágenes Flat Decorativas Profesionales -->
          <!-- Imagen Almacenamiento - Superior Izquierda -->
          <img 
            src="/images/hero/almacenamiento.webp" 
            alt="Almacenamiento - Soluciones de bodegaje ASL"
            class="absolute -top-12 -left-16 w-16 h-16 z-5 opacity-80 hover:opacity-100 transition-all duration-500 hover:scale-110 drop-shadow-lg"
            loading="lazy"
          />

          <!-- Imagen Inventarios - Superior Derecha -->
          <img 
            src="/images/hero/inventario.webp" 
            alt="Inventarios - Gestión de stock ASL"
            class="absolute -top-12 -right-16 w-16 h-16 z-5 opacity-80 hover:opacity-100 transition-all duration-500 hover:scale-110 drop-shadow-lg"
            loading="lazy"
          />

          <!-- Imagen Distribución - Inferior Izquierda -->
          <img 
            src="/images/hero/distribucion.webp" 
            alt="Distribución - Logística de entrega ASL"
            class="absolute -bottom-12 -left-16 w-16 h-16 z-5 opacity-80 hover:opacity-100 transition-all duration-500 hover:scale-110 drop-shadow-lg"
            loading="lazy"
          />
        </div>
        
        <!-- Elementos decorativos adicionales -->
        <div class="absolute -top-4 -right-4 w-8 h-8 bg-accent-yellow rounded-full opacity-80 bg-decoration"></div>
        <div class="absolute -bottom-4 -left-4 w-6 h-6 bg-primary-200 rounded-full opacity-60 bg-decoration"></div>
      </div>
      
    </div>
  </div>
</section>

<style>
  /* Animaciones de entrada */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeInLeft {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes fadeInRight {
    from {
      opacity: 0;
      transform: translateX(30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes pulse-soft {
    0%, 100% {
      opacity: 0.6;
    }
    50% {
      opacity: 0.8;
    }
  }

  /* Aplicar animaciones */
  .hero-badge {
    animation: fadeInUp 0.8s ease-out 0.2s both;
  }

  .hero-title {
    animation: fadeInUp 0.8s ease-out 0.4s both;
  }

  .hero-subtitle {
    animation: fadeInUp 0.8s ease-out 0.6s both;
  }

  .hero-stats {
    animation: fadeInUp 0.8s ease-out 0.8s both;
  }

  .hero-buttons {
    animation: fadeInUp 0.8s ease-out 1s both;
  }

  .hero-services {
    animation: fadeInUp 0.8s ease-out 1.2s both;
  }

  .hero-image {
    animation: fadeInRight 0.8s ease-out 0.6s both;
  }

  .floating-badge {
    animation: float 3s ease-in-out infinite;
  }

  .floating-stat {
    animation: float 3s ease-in-out infinite 1.5s;
  }

  .bg-decoration {
    animation: pulse-soft 4s ease-in-out infinite;
  }

  /* Efectos hover mejorados */
  .hero-button-primary {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hero-button-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 20px 25px -5px rgba(202, 36, 28, 0.1), 0 10px 10px -5px rgba(202, 36, 28, 0.04);
  }

  .hero-button-secondary {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hero-button-secondary:hover {
    transform: translateY(-2px);
    box-shadow: 0 20px 25px -5px rgba(61, 90, 128, 0.1), 0 10px 10px -5px rgba(61, 90, 128, 0.04);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5rem;
      line-height: 1.1;
    }
    
    .hero-subtitle {
      font-size: 1.125rem;
    }
  }

  /* Scroll reveal effect */
  @media (prefers-reduced-motion: no-preference) {
    .scroll-reveal {
      opacity: 0;
      transform: translateY(20px);
      transition: all 0.6s ease-out;
    }

    .scroll-reveal.revealed {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  // Intersection Observer para animaciones de scroll
  document.addEventListener('DOMContentLoaded', function() {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('revealed');
        }
      });
    }, observerOptions);

    // Observar elementos con la clase scroll-reveal
    document.querySelectorAll('.scroll-reveal').forEach(el => {
      observer.observe(el);
    });

    // Contador animado para estadísticas
    function animateCounter(element, target, duration = 2000) {
      let start = 0;
      const increment = target / (duration / 16);
      
      function updateCounter() {
        start += increment;
        if (start < target) {
          element.textContent = Math.floor(start) + (target === 16 ? '+' : target === 3 ? '' : '/7');
          requestAnimationFrame(updateCounter);
        } else {
          element.textContent = target + (target === 16 ? '+' : target === 3 ? '' : '/7');
        }
      }
      
      updateCounter();
    }

    // Activar contadores cuando sean visibles
    const statsObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const statNumber = entry.target.querySelector('.stat-number');
          if (statNumber && !statNumber.classList.contains('animated')) {
            statNumber.classList.add('animated');
            const value = parseInt(statNumber.textContent);
            animateCounter(statNumber, value);
          }
        }
      });
    }, { threshold: 0.5 });

    document.querySelectorAll('.stat-item').forEach(el => {
      statsObserver.observe(el);
    });
  });
</script>
