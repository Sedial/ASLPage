---
import Button from '../ui/Button.astro';

// Datos de servicios log√≠sticos de ASL basados en grupoasl.com
const services = [
  {
    id: 'intro',
    title: 'Soluciones Log√≠sticas Integrales',
    subtitle: 'ASL - Tu socio estrat√©gico en log√≠stica 3PL',
    description: 'Con m√°s de 16 a√±os de experiencia, ofrecemos soluciones log√≠sticas completas que optimizan tu cadena de suministro y potencian el crecimiento de tu negocio.',
    background: 'bg-white',
    textColor: 'text-gray-900',
    icon: 'üöõ',
    stats: [
      { number: '16+', label: 'A√±os de experiencia' },
      { number: '500+', label: 'Empresas atendidas' },
      { number: '99.8%', label: 'Precisi√≥n en entregas' }
    ]
  },
  {
    id: 'almacenamiento',
    title: 'Almacenamiento y Gesti√≥n de Inventarios',
    subtitle: 'Tecnolog√≠a avanzada para tu inventario',
    description: 'Bodegas especializadas con control clim√°tico, sistemas WMS de √∫ltima generaci√≥n y protocolos de seguridad que garantizan la integridad de tu mercanc√≠a.',
    background: 'bg-white',
    textColor: 'text-gray-900',
    icon: 'üì¶',
    features: [
      'Sistema WMS en tiempo real',
      'Control de temperatura y humedad',
      'Seguridad 24/7 con CCTV',
      'Trazabilidad completa',
      'Gesti√≥n FIFO automatizada'
    ]
  },
  {
    id: 'distribucion',
    title: 'Distribuci√≥n Nacional',
    subtitle: 'Conectamos todo el pa√≠s',
    description: 'Red de distribuci√≥n que cubre todo el territorio nacional con flota propia y aliados estrat√©gicos, garantizando entregas oportunas y seguras.',
    background: 'bg-white',
    textColor: 'text-gray-900',
    icon: 'üó∫Ô∏è',
    coverage: [
      'Bogot√° y Cundinamarca',
      'Medell√≠n y Antioquia',
      'Cali y Valle del Cauca',
      'Barranquilla y Costa Atl√°ntica',
      'Bucaramanga y Santanderes',
      'Cobertura nacional completa'
    ]
  },
  {
    id: 'ecommerce',
    title: 'Soluciones eCommerce',
    subtitle: 'Impulsa tu tienda online',
    description: 'Servicios especializados para comercio electr√≥nico: picking automatizado, empaque personalizado, integraci√≥n con plataformas y entrega last mile.',
    background: 'bg-white',
    textColor: 'text-gray-900',
    icon: 'üõí',
    ecommerceServices: [
      'Integraci√≥n con plataformas',
      'Picking y packing automatizado',
      'Empaque personalizado',
      'Entrega same day',
      'Gesti√≥n de devoluciones',
      'Analytics en tiempo real'
    ]
  },
  {
    id: 'tecnologia',
    title: 'Tecnolog√≠a e Innovaci√≥n',
    subtitle: 'Sistemas inteligentes para log√≠stica',
    description: 'Plataforma tecnol√≥gica propia con IA para optimizaci√≥n de rutas, IoT para tracking en tiempo real y dashboards para completa visibilidad.',
    background: 'bg-white',
    textColor: 'text-gray-900',
    icon: 'ü§ñ',
    technologies: [
      'IA para optimizaci√≥n de rutas',
      'IoT y sensores en tiempo real',
      'Dashboard personalizado',
      'API para integraciones',
      'Reportes autom√°ticos',
      'Alertas inteligentes'
    ]
  },
  {
    id: 'contacto',
    title: '¬øListo para optimizar tu log√≠stica?',
    subtitle: 'Comencemos a trabajar juntos',
    description: 'Solicita una consultor√≠a gratuita y descubre c√≥mo ASL puede transformar tu cadena de suministro con soluciones a la medida.',
    background: 'bg-white',
    textColor: 'text-gray-900',
    icon: 'üöÄ',
    contact: true
  }
];

// Mapeo de iconos (ubicados en /public/icons)
const iconMap: Record<string, string> = {
  intro: 'truck-logistics.webp',
  almacenamiento: 'warehouse-box.webp',
  distribucion: 'colombia-distribution.webp',
  ecommerce: 'ecommerce-cart.webp',
  tecnologia: 'ai-chip.webp',
  contacto: 'rocket-launch.webp',
};

// Mapeo de im√°genes (ubicadas en /public/images/services/intro)
const imageMap: Record<string, string> = {
  intro: 'logistics-center-aerial.webp',
  almacenamiento: 'automated-warehouse-interior.webp',
  distribucion: 'colombia-distribution-map.webp',
  ecommerce: 'ecommerce-fulfillment-center.webp',
  tecnologia: 'logistics-tech-dashboard.webp',
  contacto: 'asl-professional-team.webp',
};

const getIconSrc = (id: string) => `/icons/${iconMap[id] ?? 'truck-logistics.webp'}`;
const getImageSrc = (id: string) => `/images/services/intro/${imageMap[id] ?? 'logistics-center-aerial.webp'}`;
---

<div class="scrollytelling-container relative">
  <!-- Indicadores de navegaci√≥n -->
  <div class="fixed right-8 top-1/2 transform -translate-y-1/2 z-40 hidden lg:flex flex-col space-y-4">
    {services.map((service, index) => (
      <button 
        class="nav-dot w-4 h-4 rounded-full bg-gray-400/70 hover:bg-primary-500 transition-all duration-300 cursor-pointer focus:outline-none focus:ring-2 focus:ring-primary-500/50 transform hover:scale-125"
        data-target={service.id}
        aria-label={`Ir a ${service.title}`}
      ></button>
    ))}
  </div>

  <!-- Secciones de scrollytelling -->
  {services.map((service, index) => (
    <section 
      id={service.id}
      class={`scrolly-section min-h-screen flex items-center justify-center relative ${service.background} ${service.textColor} section-parallax ${index === 0 ? 'pt-20' : ''}`}
      data-section={service.id}
      data-index={index}
    >
      <!-- Acento lateral animado -->
      <div class="absolute left-0 top-0 bottom-0 w-2 bg-primary-500 z-[1] hidden md:block section-accent transform scale-y-0 origin-top"></div>
      
      <!-- Contenido principal -->
      <div class="container mx-auto px-4 relative z-10 py-24 md:py-28">
        <div class="max-w-6xl mx-auto">
          
          {service.id === 'intro' && (
            <div class="text-center space-y-12">
              <img src={getIconSrc(service.id)} alt={service.title} class="mx-auto mb-12 icon-entrance w-20 h-20 md:w-24 md:h-24 lg:w-28 lg:h-28 object-contain" data-animate="icon-bounce" data-delay="0" width="112" height="112" loading="eager" decoding="async" />
              <h1 class="text-6xl md:text-8xl font-black mb-6 leading-tight text-primary-500" data-animate="title-slide" data-delay="200">
                {service.title}
              </h1>
              <div class="h-2 w-32 bg-primary-500 mx-auto rounded-full transform scale-x-0" data-animate="line-expand" data-delay="400"></div>
              <p class="text-3xl md:text-4xl font-light mt-6 opacity-90 text-primary-400" data-animate="subtitle-fade" data-delay="600">
                {service.subtitle}
              </p>
              <p class="text-2xl md:text-3xl max-w-4xl mx-auto leading-relaxed opacity-80" data-animate="desc-rise" data-delay="800">
                {service.description}
              </p>
              
              <!-- Stats con animaciones escalonadas -->
              <div class="grid grid-cols-3 gap-12 mt-20 max-w-4xl mx-auto">
                {service.stats?.map((stat, statIndex) => (
                  <div class="text-center" data-animate="stat-pop" data-delay={1000 + (statIndex * 200)}>
                    <div class="text-5xl md:text-6xl font-black text-primary-500 mb-3 transform scale-0">{stat.number}</div>
                    <div class="text-xl font-semibold opacity-90">{stat.label}</div>
                  </div>
                ))}
              </div>
              
              <!-- Imagen principal de introducci√≥n -->
              <div class="mt-20 transform scale-90 opacity-0" data-animate="image-reveal" data-delay="1600">
                <div class="relative rounded-3xl overflow-hidden shadow-2xl border border-primary-500/20 max-w-4xl mx-auto">
                  <img 
                    src={getImageSrc('intro')} 
                    alt="Centro log√≠stico de ASL - Vista a√©rea" 
                    class="w-full h-64 md:h-80 lg:h-96 object-contain" 
                    width="1200" 
                    height="600" 
                    loading="lazy" 
                    decoding="async"
                  />
                </div>
              </div>
            </div>
          )}

          {service.id !== 'intro' && service.id !== 'contacto' && (
            <div class="grid lg:grid-cols-2 gap-20 items-center">
              <!-- Contenido textual -->
              <div class="space-y-10">
                <img src={getIconSrc(service.id)} alt={service.title} class="mb-6 icon-float w-12 h-12 md:w-16 md:h-16 lg:w-20 lg:h-20 object-contain" data-animate="icon-spin" data-delay="0" width="80" height="80" loading="lazy" decoding="async" />
                <h2 class="text-5xl md:text-6xl font-black leading-tight text-primary-500 transform -translate-x-12 opacity-0" data-animate="title-sweep" data-delay="200">
                  {service.title}
                </h2>
                <div class="h-2 w-24 bg-primary-500 rounded-full transform scale-x-0 origin-left" data-animate="line-expand" data-delay="400"></div>
                <p class="text-3xl font-light opacity-90 text-primary-400 transform translate-y-8 opacity-0" data-animate="subtitle-rise" data-delay="600">
                  {service.subtitle}
                </p>
                <p class="text-2xl leading-relaxed opacity-80 transform translate-y-12 opacity-0" data-animate="desc-fade" data-delay="800">
                  {service.description}
                </p>
                
                <!-- Lista de caracter√≠sticas con animaciones escalonadas -->
                {service.features && (
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-12">
                    {service.features.map((feature, featureIndex) => (
                      <div class="flex items-center space-x-4 bg-gray-50 rounded-xl p-6 border border-gray-200 border-l-4 border-l-primary-500 transform translate-x-8 opacity-0 shadow-sm hover:shadow-md transition-shadow" data-animate="card-slide" data-delay={1000 + (featureIndex * 100)}>
                        <div class="w-3 h-3 bg-primary-500 rounded-full flex-shrink-0 pulse-dot"></div>
                        <span class="font-semibold text-lg">{feature}</span>
                      </div>
                    ))}
                  </div>
                )}

                {service.coverage && (
                  <div class="grid grid-cols-2 gap-6 mt-12">
                    {service.coverage.map((location, locationIndex) => (
                      <div class="flex items-center space-x-4 bg-gray-50 rounded-xl p-6 border border-gray-200 border-l-4 border-l-primary-500 transform translate-x-8 opacity-0 shadow-sm hover:shadow-md transition-shadow" data-animate="card-slide" data-delay={1000 + (locationIndex * 100)}>
                        <div class="w-3 h-3 bg-primary-500 rounded-full flex-shrink-0 pulse-dot"></div>
                        <span class="font-semibold text-lg">{location}</span>
                      </div>
                    ))}
                  </div>
                )}

                {service.ecommerceServices && (
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-12">
                    {service.ecommerceServices.map((eservice, eserviceIndex) => (
                      <div class="flex items-center space-x-4 bg-gray-50 rounded-xl p-6 border border-gray-200 border-l-4 border-l-primary-500 transform translate-x-8 opacity-0 shadow-sm hover:shadow-md transition-shadow" data-animate="card-slide" data-delay={1000 + (eserviceIndex * 100)}>
                        <div class="w-3 h-3 bg-primary-500 rounded-full flex-shrink-0 pulse-dot"></div>
                        <span class="font-semibold text-lg">{eservice}</span>
                      </div>
                    ))}
                  </div>
                )}

                {service.technologies && (
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-12">
                    {service.technologies.map((tech, techIndex) => (
                      <div class="flex items-center space-x-4 bg-gray-50 rounded-xl p-6 border border-gray-200 border-l-4 border-l-primary-500 transform translate-x-8 opacity-0 shadow-sm hover:shadow-md transition-shadow" data-animate="card-slide" data-delay={1000 + (techIndex * 100)}>
                        <div class="w-3 h-3 bg-primary-500 rounded-full flex-shrink-0 pulse-dot"></div>
                        <span class="font-semibold text-lg">{tech}</span>
                      </div>
                    ))}
                  </div>
                )}
              </div>
              
              <!-- √Årea visual con animaciones din√°micas -->
              <div class="relative transform scale-75 opacity-0" data-animate="visual-zoom" data-delay="1000">
                <div class="bg-gray-50 rounded-3xl p-12 lg:p-16 border border-gray-200 shadow-lg will-change-transform visual-card">
                  <div class="text-center space-y-8">
                    <img src={getIconSrc(service.id)} alt="" aria-hidden="true" class="mx-auto opacity-80 icon-pulse w-16 h-16 md:w-20 md:h-20 lg:w-24 lg:h-24 object-contain" data-animate="icon-glow" data-delay="1200" width="96" height="96" loading="lazy" decoding="async" />
                    <h3 class="text-3xl font-bold text-primary-500 transform translate-y-4 opacity-0" data-animate="visual-title" data-delay="1400">
                      {service.id === 'almacenamiento' && 'Gesti√≥n Avanzada'}
                      {service.id === 'distribucion' && 'Cobertura Total'}
                      {service.id === 'ecommerce' && 'E-commerce Ready'}
                      {service.id === 'tecnologia' && 'Innovaci√≥n Continua'}
                    </h3>
                    <div class="w-full h-56 md:h-72 lg:h-80 bg-gray-100 rounded-2xl overflow-hidden border border-gray-200 shadow-inner image-placeholder transform scale-90 opacity-0" data-animate="image-reveal" data-delay="1600">
                      <img 
                        src={getImageSrc(service.id)} 
                        alt={`Imagen de ${service.title}`} 
                        class="w-full h-full object-contain" 
                        width="600" 
                        height="400" 
                        loading="lazy" 
                        decoding="async"
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {service.id === 'contacto' && (
            <div class="text-center space-y-12">
              <img src={getIconSrc(service.id)} alt={service.title} class="mx-auto mb-8 icon-entrance w-20 h-20 md:w-24 md:h-24 lg:w-28 lg:h-28 object-contain" data-animate="icon-bounce" data-delay="0" width="112" height="112" loading="lazy" decoding="async" />
              <h2 class="text-6xl md:text-8xl font-black mb-6 leading-tight text-primary-500" data-animate="title-slide" data-delay="200">
                {service.title}
              </h2>
              <div class="h-2 w-32 bg-primary-500 mx-auto rounded-full transform scale-x-0" data-animate="line-expand" data-delay="400"></div>
              <p class="text-3xl md:text-4xl font-light mb-8 opacity-90 text-primary-400" data-animate="subtitle-fade" data-delay="600">
                {service.subtitle}
              </p>
              <p class="text-2xl md:text-3xl max-w-4xl mx-auto leading-relaxed opacity-80 mb-16" data-animate="desc-rise" data-delay="800">
                {service.description}
              </p>
              
              <!-- CTAs con animaciones llamativas -->
              <div class="flex flex-col sm:flex-row gap-8 justify-center items-center" data-animate="cta-appear" data-delay="1000">
                <Button 
                  href="/contact" 
                  size="lg"
                  class="bg-primary-500 hover:bg-primary-600 text-white font-bold px-12 py-6 text-2xl rounded-2xl shadow-2xl hover:shadow-primary-500/25 transition-all duration-300 transform hover:scale-105 cta-pulse"
                >
                  Solicitar Consultor√≠a Gratuita
                </Button>
                <Button 
                  href="tel:+57-311-123-4567" 
                  variant="outline" 
                  size="lg"
                  class="border-2 border-primary-500 text-primary-400 hover:bg-primary-500 hover:text-white font-bold px-12 py-6 text-2xl rounded-2xl transition-all duration-300 transform hover:scale-105"
                >
                  Llamar Ahora
                </Button>
              </div>
            </div>
          )}
        </div>
      </div>

  </section>
  ))}
</div>

<style>
  /* Scroll-snap inmersivo */
  body.scrolly-enabled {
    scroll-snap-type: y proximity;
    scroll-behavior: smooth;
  }
  
  .scrollytelling-container {}
  
  .scrolly-section {
    scroll-snap-align: start;
    scroll-snap-stop: normal;
    transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  /* Efectos de parallax en secciones */
  .section-parallax {
    will-change: transform;
  }
  
  .section-overlay {
    transition: opacity 0.5s ease-in-out;
  }
  
  .section-accent {
    transition: transform 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  
  .section-accent.active {
    transform: scaleY(1);
  }
  
  /* Dots de navegaci√≥n m√°s din√°micos */
  .nav-dot.active {
    background-color: theme('colors.primary.500') !important;
    transform: scale(1.4);
    box-shadow: 0 0 0 6px rgba(202,36,28,0.2), 0 0 20px rgba(202,36,28,0.4);
  }
  
  /* Asegurar que las secciones ocupen toda la pantalla */
  .scrolly-section {
    min-height: 100vh;
    min-height: 100dvh;
  }
  
  /* Animaciones DIN√ÅMICAS y VISIBLES */
  [data-animate] { 
    opacity: 0; 
    will-change: transform, opacity;
  }
  .animated { opacity: 1; }
  
  /* Animaciones de t√≠tulos */
  .animated.title-slide { animation: titleSlide 1.2s cubic-bezier(0.175, 0.885, 0.32, 1.275) both; }
  .animated.title-sweep { animation: titleSweep 1s cubic-bezier(0.68, -0.55, 0.265, 1.55) both; }
  .animated.subtitle-fade { animation: subtitleFade 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) both; }
  .animated.subtitle-rise { animation: subtitleRise 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both; }
  
  /* Animaciones de iconos - M√ÅS DISCRETAS */
  .animated.icon-bounce { animation: iconBounce 1s ease-out both; }
  .animated.icon-spin { animation: iconSpin 0.8s ease-out both; }
  .animated.icon-glow { animation: iconGlow 0.8s ease-out both; }
  
  /* Animaciones de elementos */
  .animated.line-expand { animation: lineExpand 1s cubic-bezier(0.68, -0.55, 0.265, 1.55) both; }
  .animated.desc-rise { animation: descRise 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) both; }
  .animated.desc-fade { animation: descFade 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) both; }
  .animated.stat-pop { animation: statPop 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) both; }
  .animated.card-slide { animation: cardSlide 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) both; }
  .animated.visual-zoom { animation: visualZoom 1.2s cubic-bezier(0.175, 0.885, 0.32, 1.275) both; }
  .animated.visual-title { animation: visualTitle 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) both; }
  .animated.image-reveal { animation: imageReveal 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both; }
  .animated.cta-appear { animation: ctaAppear 1s cubic-bezier(0.68, -0.55, 0.265, 1.55) both; }

  /* Definici√≥n de keyframes */
  @keyframes titleSlide {
    0% { transform: translateY(-40px) scale(0.9); opacity: 0; }
    100% { transform: translateY(0) scale(1); opacity: 1; }
  }
  @keyframes titleSweep {
    0% { transform: translateX(-48px) scale(0.95); opacity: 0; }
    100% { transform: translateX(0) scale(1); opacity: 1; }
  }
  @keyframes subtitleFade {
    0% { transform: translateY(20px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
  }
  @keyframes subtitleRise {
    0% { transform: translateY(32px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
  }
  @keyframes iconBounce {
    0% { transform: scale(0.8) translateY(10px); opacity: 0; }
    50% { transform: scale(1.05) translateY(-2px); }
    100% { transform: scale(1) translateY(0); opacity: 1; }
  }
  @keyframes iconSpin {
    0% { transform: scale(0.9) rotate(-45deg); opacity: 0; }
    100% { transform: scale(1) rotate(0deg); opacity: 1; }
  }
  @keyframes iconGlow {
    0% { transform: scale(0.95); opacity: 0; filter: brightness(0.8); }
    100% { transform: scale(1); opacity: 1; filter: brightness(1); }
  }
  @keyframes lineExpand {
    0% { transform: scaleX(0); }
    100% { transform: scaleX(1); }
  }
  @keyframes descRise {
    0% { transform: translateY(24px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
  }
  @keyframes descFade {
    0% { transform: translateY(48px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
  }
  @keyframes statPop {
    0% { transform: scale(0); opacity: 0; }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); opacity: 1; }
  }
  @keyframes cardSlide {
    0% { transform: translateX(32px) scale(0.95); opacity: 0; }
    100% { transform: translateX(0) scale(1); opacity: 1; }
  }
  @keyframes visualZoom {
    0% { transform: scale(0.3); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
  }
  @keyframes visualTitle {
    0% { transform: translateY(16px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
  }
  @keyframes imageReveal {
    0% { transform: scale(0.9) rotateY(90deg); opacity: 0; }
    100% { transform: scale(1) rotateY(0deg); opacity: 1; }
  }
  @keyframes ctaAppear {
    0% { transform: translateY(40px) scale(0.8); opacity: 0; }
    100% { transform: translateY(0) scale(1); opacity: 1; }
  }

  /* Animaciones continuas */
  .icon-float { animation: iconFloat 4s ease-in-out infinite; }
  .icon-pulse { animation: iconPulse 3s ease-in-out infinite; }
  .pulse-dot { animation: pulseDot 2s ease-in-out infinite; }
  .visual-card { animation: visualFloat 6s ease-in-out infinite; }
  .cta-pulse { animation: ctaPulse 2s ease-in-out infinite; }
  
  @keyframes iconFloat {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    50% { transform: translateY(-4px) rotate(2deg); }
  }
  @keyframes iconPulse {
    0%, 100% { transform: scale(1); filter: brightness(1); }
    50% { transform: scale(1.02); filter: brightness(1.05); }
  }
  @keyframes pulseDot {
    0%, 100% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.3); opacity: 0.7; }
  }
  @keyframes visualFloat {
    0%, 100% { transform: translateY(0) scale(1); }
    50% { transform: translateY(-8px) scale(1.02); }
  }
  @keyframes ctaPulse {
    0%, 100% { box-shadow: 0 10px 30px rgba(202,36,28,0.3); }
    50% { box-shadow: 0 15px 40px rgba(202,36,28,0.5); }
  }

  /* Accesibilidad: reducir movimiento */
  @media (prefers-reduced-motion: reduce) {
    .animated.title-slide,
    .animated.title-sweep,
    .animated.subtitle-fade,
    .animated.subtitle-rise,
    .animated.icon-bounce,
    .animated.icon-spin,
    .animated.icon-glow,
    .animated.line-expand,
    .animated.desc-rise,
    .animated.desc-fade,
    .animated.stat-pop,
    .animated.card-slide,
    .animated.visual-zoom,
    .animated.visual-title,
    .animated.image-reveal,
    .animated.cta-appear,
    .icon-float,
    .icon-pulse,
    .pulse-dot,
    .visual-card,
    .cta-pulse {
      animation: none !important;
      opacity: 1 !important;
      transform: none !important;
    }
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .scrolly-section {
      padding-top: 2rem;
      padding-bottom: 2rem;
    }
  }
</style>

<script>
  // Mantener scroll del documento, navbar fluido y animaciones discretas
  document.addEventListener('DOMContentLoaded', function() {
    const sections = document.querySelectorAll('.scrolly-section');
    const navDots = document.querySelectorAll('.nav-dot');

    // Activar scroll-snap en body solo en esta p√°gina
    document.body.classList.add('scrolly-enabled');

    // Navbar: mantener comportamiento de esta p√°gina (transparente -> s√≥lido al scrollear)
    const nav = document.querySelector('nav');
    const onScroll = () => {
      if (window.scrollY > 10) {
        nav?.classList.add('navbar-scrolled');
      } else {
        nav?.classList.remove('navbar-scrolled');
      }
    };
    onScroll();
    window.addEventListener('scroll', onScroll, { passive: true });

    // Observador de intersecci√≥n para activar indicadores y animaciones
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const sectionId = entry.target.getAttribute('data-section');
          // Actualizar indicadores
          navDots.forEach(dot => {
            dot.classList.remove('active');
            if (dot.getAttribute('data-target') === sectionId) {
              dot.classList.add('active');
            }
          });
          // Animaciones discretas
          const animated = entry.target.querySelectorAll('[data-animate]:not(.animated)');
          animated.forEach((el) => {
            const type = el.getAttribute('data-animate');
            const rawDelay = parseInt(el.getAttribute('data-delay') || '0', 10);
            const delay = Math.min(rawDelay, 400); // l√≠mite para evitar apariciones tard√≠as
            setTimeout(() => {
              el.classList.add('animated', type);
            }, delay);
          });
        }
      });
    }, { threshold: 0.35 });

    sections.forEach(section => observer.observe(section));

    // Navegaci√≥n con clicks en los dots
    navDots.forEach(dot => {
      dot.addEventListener('click', function() {
        const targetId = this.getAttribute('data-target');
        const targetSection = document.getElementById(targetId);
        if (targetSection) {
          targetSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
      });
    });

    // Navegaci√≥n con teclado (flechas arriba/abajo)
    document.addEventListener('keydown', function(e) {
      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {
        e.preventDefault();
        const currentActive = document.querySelector('.nav-dot.active');
        if (!currentActive) return;
        const currentIndex = Array.from(navDots).indexOf(currentActive);
        let nextIndex;
        if (e.key === 'ArrowDown') {
          nextIndex = currentIndex < navDots.length - 1 ? currentIndex + 1 : currentIndex;
        } else {
          nextIndex = currentIndex > 0 ? currentIndex - 1 : currentIndex;
        }
        if (nextIndex !== currentIndex) {
          navDots[nextIndex].click();
        }
      }
    });

    // Limpieza cuando el usuario salga de la p√°gina
    window.addEventListener('beforeunload', () => {
      document.body.classList.remove('scrolly-enabled');
      window.removeEventListener('scroll', onScroll);
    });
  });
</script>