---
// Load testimonials data
const testimonialsData = await import('../../data/testimonials.json');
const { headline, subheadline, testimonials } = testimonialsData;

// Helper function to generate stars based on rating
function generateStars(rating: number) {
  const fullStars = Math.floor(rating);
  const halfStar = rating % 1 >= 0.5;
  const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);
  
  let stars = '';
  
  // Full stars
  for (let i = 0; i < fullStars; i++) {
    stars += `<svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
    </svg>`;
  }
  
  // Half star
  if (halfStar) {
    stars += `<svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
      <defs>
        <linearGradient id="half-star-gradient" x1="0%" y1="0%" x2="100%" y2="0%">
          <stop offset="50%" stop-color="currentColor" stop-opacity="1"></stop>
          <stop offset="50%" stop-color="currentColor" stop-opacity="0.3"></stop>
        </linearGradient>
      </defs>
      <path fill="url(#half-star-gradient)" d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
    </svg>`;
  }
  
  // Empty stars
  for (let i = 0; i < emptyStars; i++) {
    stars += `<svg class="w-5 h-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
    </svg>`;
  }
  
  return stars;
}
---

<section class="section bg-gray-50" id="testimonials">
  <div class="container">
    <div class="section-heading">
      <h2 class="section-title">{headline}</h2>
      <p class="section-subtitle">{subheadline}</p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mt-12">
      {testimonials.map((testimonial) => (
        <div class="bg-white p-6 rounded-lg shadow-md">
          {testimonial.rating && (
            <div class="flex mb-4">
              <Fragment set:html={generateStars(testimonial.rating)} />
            </div>
          )}
          <blockquote class="text-gray-700 italic mb-5">
            {testimonial.content}
          </blockquote>
          <div class="flex items-center">
            {testimonial.avatar && (
              <div class="mr-4">
                <img 
                  src={testimonial.avatar} 
                  alt={`Avatar of ${testimonial.name}`} 
                  class="w-12 h-12 rounded-full object-cover"
                />
              </div>
            )}
            <div>
              <div class="font-semibold text-gray-900">{testimonial.name}</div>
              <div class="text-sm text-gray-600">{testimonial.position}, {testimonial.company}</div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>
